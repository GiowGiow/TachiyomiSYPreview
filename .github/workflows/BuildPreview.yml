name: Remote Dispatch Build App
 
on: [repository_dispatch]
 
jobs:
  ping-pong:
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
      - name: PONG - Dispatch response to received PING
        run: |
          curl -X POST https://api.github.com/repos/jobobby04/TachiyomiSY/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "pong", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
  apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'jobobby04/TachiyomiSY'
          fetch-depth: 0
      - name: Git fetch tags
        run: git fetch --tags
      - name: Set CURRENT_VERSION
        run: echo "::set-env name=CURRENT_VERSION::$(git tag -l | tail -2 | head -n 1)"
      - name: Set NEXT_VERSION
        run: echo "::set-env name=NEXT_VERSION::$(git tag -l | tail -1)"
      - name: Set RELEASE_NOTES
        run: |
          release_notes="$(git log ${{ env.CURRENT_VERSION }}..${{ env.NEXT_VERSION }} --pretty=format:'- %s [%an] (%h)')"
          release_notes="${release_notes//$'%'/%25}"
          release_notes="${release_notes//$'\n'/%0A}"
          release_notes="${release_notes//$'\r'/%0D}"
          echo "::set-env name=RELEASE_NOTES::$release_notes"
      - name: Set CHANGELOG
        run: |
          changelog="$(git log ${{ env.CURRENT_VERSION }}..${{ env.NEXT_VERSION }} --pretty=format:'<changelogtext>%s [%an] (%h)</changelogtext>')"
          changelog="${changelog//$'%'/%25}"
          changelog="${changelog//$'\n'/}"
          changelog="${changelog//$'\r'/}"
          changelog="<?xml version=\"1.0\" encoding=\"utf-8\"?><changelog bulletedList=\"true\"><changelogversion versionName=\"${{ github.run_number }}\" changeDate=\"\">$changelog</changelogversion></changelog>"
          echo "::set-env name=CHANGELOG::$changelog"
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Get NDK 
        run: sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;20.0.5594570"
      - name: Write Version.kt
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/src/main/java/exh/Version.kt
          # The contents of the file
          contents: "package exh const val syDebugVersion: String = \"${{ github.run_number }}\""
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve
      - name: Write changelog_debug.xml
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/src/main/res/raw/changelog_debug.xml
          # The contents of the file
          contents: "${{ env.CHANGELOG }}"
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve
      - name: Write google-services.json
        uses: DamianReeves/write-file-action@v1.0
        with:
          # The path to the file to write
          path: app/google-services.json
          # The contents of the file
          contents: ${{ secrets.GOOGLE_SERVICES_TEXT }}
          # The mode of writing to use: `overwrite`, `append`, or `preserve`.
          write-mode: overwrite # optional, default is preserve
      - name: Build Release APK
        run: bash ./gradlew assembleRelease --stacktrace
      - name: Sign Android Release
        uses: r0adkll/sign-android-release@v1
        with:
          # The directory to find your release to sign
          releaseDirectory: app/build/outputs/apk/standard/release
          # The key used to sign your release in base64 encoded format
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          # The key alias
          alias: ${{ secrets.ALIAS }}
          # The password to the keystore
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          # The password for the key
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: TachiyomiSY Dev Build ${{ github.run_number }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.SIGNED_RELEASE_FILE }}
          asset_name: TachiyomiSY-${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
